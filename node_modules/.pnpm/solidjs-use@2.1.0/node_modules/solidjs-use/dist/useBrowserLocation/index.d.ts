import { Accessor, Setter } from 'solid-js';
import { ConfigurableWindow } from '../_configurable.js';

interface BrowserLocationState {
    trigger: string;
    state?: any;
    length?: number;
    origin?: string;
    hash: Accessor<string | undefined>;
    setHash: Setter<string | undefined>;
    host: Accessor<string | undefined>;
    setHost: Setter<string | undefined>;
    hostname: Accessor<string | undefined>;
    setHostname: Setter<string | undefined>;
    href: Accessor<string | undefined>;
    setHref: Setter<string | undefined>;
    pathname: Accessor<string | undefined>;
    setPathname: Setter<string | undefined>;
    port: Accessor<string | undefined>;
    setPort: Setter<string | undefined>;
    protocol: Accessor<string | undefined>;
    setProtocol: Setter<string | undefined>;
    search: Accessor<string | undefined>;
    setSearch: Setter<string | undefined>;
}
/**
 * Reactive browser location.
 *
 * @see https://solidjs-use.github.io/solidjs-use/core/useBrowserLocation
 */
declare function useBrowserLocation({ window }?: ConfigurableWindow): BrowserLocationState;
type UseBrowserLocationReturn = ReturnType<typeof useBrowserLocation>;

export { BrowserLocationState, UseBrowserLocationReturn, useBrowserLocation };
